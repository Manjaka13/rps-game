{"version":3,"sources":["Navigation.js","Board.js","Cardlist.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","mapped_social","title","icon","faFacebook","link","faGithub","faLinkedin","map","item","n","key","className","href","faGamepad","Board","props","weapon_p1","weapon_p2","items","name","faHandRock","faHandPaper","faHandScissors","p1_items","style","position","top","p2_items","p2_text","win_className","win_text","players_choosen","forEach","winner","p1","p2","result","who_wins","setTimeout","reset","Cardlist","available","class_name","mapped_items","onClick","choose","handle_click","App","useState","setWeapon_p1","setWeapon_p2","choice","setChoice","c","w","Math","floor","random","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a61868ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Navigation.scss\";\r\nimport {FontAwesomeIcon as Icon} from \"@fortawesome/react-fontawesome\";\r\nimport {faGamepad} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faFacebook, faGithub, faLinkedin} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nfunction Navigation() {\r\n\tconst social = [\r\n\t\t{\r\n\t\t\ttitle: \"Visit my Facebook page !\",\r\n\t\t\ticon: faFacebook,\r\n\t\t\tlink: \"https://facebook.com/manjaka13\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Contribute this game's repository\",\r\n\t\t\ticon: faGithub,\r\n\t\t\tlink: \"https://github.com/Manjaka13/rps-game\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: \"Visit my LinkedIn page\",\r\n\t\t\ticon: faLinkedin,\r\n\t\t\tlink: \"https://linkedin.com/mwlite/in/harijaona-rajaonson-9456481b5\"\r\n\t\t}\r\n\t];\r\n\tconst mapped_social = social.map((item, n) => {\r\n\t\treturn (\r\n\t\t\t<li key={n}>\r\n\t\t\t\t<a className=\"link\" href={item.link} title={item.title}>\r\n\t\t\t\t\t<Icon className=\"icon\" icon={item.icon} />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"rps-navigation\">\r\n\t\t\t<div className=\"brand\">\r\n\t\t\t\t<div className=\"game\">\r\n\t\t\t\t\t<Icon className=\"icon\" icon={faGamepad} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1 className=\"title title-md\">Rock Paper Scissors</h1>\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"social\">\r\n\t\t\t\t{mapped_social}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"./Board.scss\";\r\nimport {FontAwesomeIcon as Icon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHandRock, faHandPaper, faHandScissors} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Board(props) {\r\n\tconst idle = \"none\";\r\n\tconst weapon_p1 = props.weapon_p1 ? props.weapon_p1 : idle;\r\n\tconst weapon_p2 = props.weapon_p2 ? props.weapon_p2 : idle;\r\n\tconst items = [\r\n\t\t{name: \"rock\", icon: faHandRock},\r\n\t\t{name: \"paper\", icon: faHandPaper},\r\n\t\t{name: \"scissors\", icon: faHandScissors}\r\n\t];\r\n\tconst who_wins = (p1, p2) => {\r\n\t\tlet result = 0;\r\n\t\tif(p1 === \"rock\")\r\n\t\t\tresult = p2 === \"paper\" ? 2 : p2 === \"scissors\" ? 1 : 0;\r\n\t\telse if(p1 === \"paper\")\r\n\t\t\tresult = p2 === \"rock\" ? 1 : p2 === \"scissors\" ? 2 : 0;\r\n\t\telse if(p1 === \"scissors\")\r\n\t\t\tresult = p2 === \"rock\" ? 2 : p2 === \"paper\" ? 1 : 0;\r\n\t\treturn result;\r\n\t};\r\n\r\n\t\r\n\tconst p1_items = items.map((item, n) => {\r\n\t\tconst style = {\r\n\t\t\tposition: \"relative\",\r\n\t\t\ttop: weapon_p1 === item.name ? ((n + 1) * -100) + \"%\" : \"0\"\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className=\"item\" key={n} style={style}>\r\n\t\t\t\t<Icon className={\"icon \" + item.name} icon={item.icon}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\tconst p1_name = \"Player\";\r\n\r\n\r\n\tconst p2_items = items.map((item, n) => {\r\n\t\tconst style = {\r\n\t\t\tposition: \"relative\",\r\n\t\t\ttop: weapon_p2 === item.name ? ((n + 1) * -100) + \"%\" : \"0\"\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className=\"item\" key={n} style={style}>\r\n\t\t\t\t<Icon className={\"icon \" + item.name} icon={item.icon}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\tconst p2_text = weapon_p2 === \"thinking\" ? \"Preparing to strike...\" : \"Haha, come on !\";\r\n\tconst p2_name = \"Bot\";\r\n\r\n\r\n\r\n\tlet win_className = \"center center_disabled\";\r\n\tlet win_text = \"\";\r\n\tlet players_choosen = 0;\r\n\titems.forEach(item => {\r\n\t\tif(weapon_p1 === item.name)\r\n\t\t\tplayers_choosen ++;\r\n\t\tif(weapon_p2 === item.name)\r\n\t\t\tplayers_choosen ++;\r\n\t});\r\n\tif(players_choosen === 2) {\r\n\t\tconst winner = who_wins(weapon_p1, weapon_p2);\r\n\t\twin_text = winner === 1 ? \"Player won !\" : winner === 2 ? \"Bot wins !\" : \"Play again !\";\r\n\t\twin_className = \"center\";\r\n\t\tsetTimeout(() => {\r\n\t\t\tprops.reset();\r\n\t\t}, 2000);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"rps-board\">\r\n\t\t\t<div className=\"left\">\r\n\t\t\t\t<div className=\"box\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"empty\">\r\n\t\t\t\t\t\t\t<p className=\"content\">Choose a weapon !</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{p1_items}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"text\">{p1_name}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={win_className}>\r\n\t\t\t\t<div className=\"box\">\r\n\t\t\t\t\t<p className=\"win_text\">{win_text}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"right\">\r\n\t\t\t\t<div className=\"box\">\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"empty\">\r\n\t\t\t\t\t\t\t<p className=\"content\">{p2_text}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{p2_items}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"text\">{p2_name}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport \"./Cardlist.scss\";\r\nimport {FontAwesomeIcon as Icon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHandRock, faHandPaper, faHandScissors} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Cardlist(props) {\r\n\tconst available = props.available ? true : false;\r\n\tconst class_name = available ? \"card\" : \"card card_disabled\";\r\n\t//When user clicks an item\r\n\tconst handle_click = (item) => {\r\n\t\tif(typeof(props.choose) === \"function\" && available)\r\n\t\t\tprops.choose(item);\r\n\t};\r\n\tconst items = [\r\n\t\t{name: \"rock\", icon: faHandRock},\r\n\t\t{name: \"paper\", icon: faHandPaper},\r\n\t\t{name: \"scissors\", icon: faHandScissors}\r\n\t];\r\n\tconst mapped_items = items.map((item, n) => {\r\n\t\treturn (\r\n\t\t\t<div className={class_name} key={n}>\r\n\t\t\t\t<div className=\"item\" title={\"Choose \" + item.name} onClick={() => handle_click(item.name)}>\r\n\t\t\t\t\t<Icon className=\"icon\" icon={item.icon} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"rps-cardlist\">\r\n\t\t\t{mapped_items}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cardlist;","import React, {useState} from \"react\";\r\nimport \"./App.scss\";\r\nimport Navigation from \"./Navigation\";\r\nimport Board from \"./Board\";\r\nimport Cardlist from \"./Cardlist\";\r\n\r\nfunction App() {\r\n\tconst [weapon_p1, setWeapon_p1] = useState(\"none\");\r\n\tconst [weapon_p2, setWeapon_p2] = useState(\"none\");\r\n\tconst [choice, setChoice] = useState(true);\r\n\tconst choose = (c) => {\r\n\t\tsetChoice(() => !choice);\r\n\t\tsetWeapon_p1(() => c);\r\n\t\tsetWeapon_p2(() => \"thinking\");\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst w = Math.floor(Math.random() * 3);\r\n\t\t\tsetWeapon_p2(() => w === 0 ? \"rock\" : w === 1 ? \"paper\" : \"scissors\");\r\n\t\t}, 1000);\r\n\t};\r\n\tconst reset = () => {\r\n\t\tsetWeapon_p1(() => \"none\");\r\n\t\tsetWeapon_p2(() => \"none\");\r\n\t\tsetChoice(() => true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"rps-app\">\r\n\t\t\t<Navigation />\r\n\t\t\t<Board weapon_p1={weapon_p1} weapon_p2={weapon_p2} reset={reset} />\r\n\t\t\t<Cardlist available={choice} choose={choose} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}